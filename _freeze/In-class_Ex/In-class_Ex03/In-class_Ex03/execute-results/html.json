{
  "hash": "4caee2ee2cdffeefeacadf2c85f51f95",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 3\"\nauthor: \"Georgia Ng\"\ndate: \"September 2, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## 3.1 Overview\n\n## 3.2 Installing the Required Packages\n\nSince maptools is retired and binary is removed from CRAN, we will be downloading it from the posit public package manager snapshots.\n\n> Note: It is important to add `eval:false` in the code chunk as shown below after installation is complete to avoid it being executed every time the quarto document is being rendered.\n\n```{#| eval: false}\ninstall.packages(\"maptools\",repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf,tmap,tidyverse)\n```\n:::\n\n\n## 3.3 The Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_read(dsn=\"data/MasterPlan2014SubzoneBoundaryWebSHP/\", \n                   layer=\"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/georgiaxng/georgiaxng/is415-handson/In-class_Ex/In-class_Ex03/data/MasterPlan2014SubzoneBoundaryWebSHP' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nThe code chunk below, `st_union()` is used to derive the **coastal outline** sf tibble data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_sf <-mpsz_sf %>%\n  st_union()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(sg_sf)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex03_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## 3.4 Viewing\n\nThe below chunk of code imports the ACLED Myanmar data, converts it into a spatial format, changes the coordinate system, and formats the event dates into a standard date format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf <- read_csv(\"data/ACLED_Myanmar.csv\") %>% \n  st_as_sf(coords = c(\n    \"longitude\", \"latitude\"), crs = 4326) %>% \n  st_transform(crs= 32647)%>%\n  mutate(event_date = dmy(event_date))\n```\n:::\n\n\nThis code produces an interactive map displaying dots for events in 2023 or classified as \"Political violence.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('view')\nacled_sf %>%\n  filter(year == 2023 |\n           event_type == \"Political violence\") %>%\n  tm_shape()+\n  tm_dots()\ntmap_mode('plot')\n```\n:::\n",
    "supporting": [
      "In-class_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}